<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers && schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ModuleHelp.Text" xml:space="preserve">
    <value>&lt;h1&gt;درباره بخش ایجاد کننده پکیج&lt;/h1&gt;&lt;p&gt;این بخش برای شما امکان ایجاد پکیج ها را فراهم می آورد.&lt;/p&gt;</value>
  </data>
  <data name="ControlTitle_packagewriter.Text" xml:space="preserve">
    <value>ایجاد پکیج</value>
  </data>
  <data name="Introduction.Help" xml:space="preserve">
    <value>در این راهنمای نصب شما می توانید همه فایل هایی که برای نصب مورد نیاز هستند را بصورت مجتمع ایجاد نمود.</value>
  </data>
  <data name="Introduction.Title" xml:space="preserve">
    <value>ایجاد پکیج</value>
  </data>
  <data name="plBasePath.Help" xml:space="preserve">
    <value>این گزینه پوشه ای که فایل های پکیج در آنجا قرار دارند را نمایش می دهد.</value>
  </data>
  <data name="plBasePath.Text" xml:space="preserve">
    <value>پوشه</value>
  </data>
  <data name="plBinFolder.Help" xml:space="preserve">
    <value>این گزینه پوشه ای که فایل های اسمبلی پکیج در آنجا قرار دارند را نمایش می دهد.</value>
  </data>
  <data name="plBinFolder.Text" xml:space="preserve">
    <value>پوشه اسمبلی</value>
  </data>
  <data name="Cancel.Text" xml:space="preserve">
    <value>بازگشت</value>
  </data>
  <data name="ChooseFiles.Help" xml:space="preserve">
    <value>در این مرحله شما می توایند فایل هایی که بایستی در پکیج قرار بگیرند را انتخاب نمایید. برنامه راهنمای نصب می تواند لیست فایل های مربوطه را تشخیص دهد ولی شما می توایند فایلی را به لیست اضافه و یا از لیست حذف نمایید. حتی شما می توانید تصمیم بگیرید که سورس فایل  ها نیز در پکیج قرار بگیرد؛ به این منظور بایستی گزینه "شامل سورس" را تمنخاب نمایید.</value>
  </data>
  <data name="ChooseFiles.Title" xml:space="preserve">
    <value>انتخاب فایل هایی که بایستی در پکیج قرار داشته باشند</value>
  </data>
  <data name="cmdGetFiles.Text" xml:space="preserve">
    <value>رفرش نمودن لیست فایل ها</value>
  </data>
  <data name="chkIncludeSource.Text" xml:space="preserve">
    <value>شامل سورس:</value>
  </data>
  <data name="ChooseAssemblies.Help" xml:space="preserve">
    <value>در این مرحله شما می توانید فایل های اسمبلی که بایستی در پکیج باشند را انتخاب نمایید. در صورتی که یک فایل پروژه در پوشه پکیج باشد، برنامه راهنمای نصب لیست فایل های اسمبلی را تشخیص خواهد داد؛ در این حالت شما می توانید فایلی را به لیست اضافه نموده و یا از لیست حذف نمایید.</value>
  </data>
  <data name="ChooseAssemblies.Title" xml:space="preserve">
    <value>انتخاب فایل های اسمبلی که بایستی در پکیج قرار داشته باشند</value>
  </data>
  <data name="cmdGetAssemblies.Text" xml:space="preserve">
    <value>رفرش نمودن لیست</value>
  </data>
  <data name="Complete.Text" xml:space="preserve">
    <value>پکیج کامل (بصورت فایل فشرده):</value>
  </data>
  <data name="FinalStep.Help" xml:space="preserve">
    <value>آخرین مرحله ایجاد پکیج است. برای ایجاد یک نسخه کپی از فایل راهنمای نصب،  گزینه " ایجاد فایل راهنمای نصب" را انتخاب نمایید. این فایل در پوشه پکیج ایجاد خواهد شد. بر اساس تنظیماتی که شما اینجا استفاده می نمایید، فایل راهنمای نصب در بانک اطلاعات ذخیره شده و به پکیج نیز اضافه خواهد گردید.&lt;br/&gt;&lt;br/&gt;
برای ایجاد یک پکیج گزینه "ایجاد پکیج" را انتخاب نمایید. پکیج در مسیر پوشه نصب قرار خواهد گرفت. (به عنوان مثال Install/Module برای ماژول و Install/Skins برای پوسته ها).</value>
  </data>
  <data name="FinalStep.Title" xml:space="preserve">
    <value>ایجاد پکیج</value>
  </data>
  <data name="Manifest.Text" xml:space="preserve">
    <value>فقط فایل راهنمای نصب:</value>
  </data>
  <data name="plManifestName.Help" xml:space="preserve">
    <value>لطفا نامی که بایستی به عنوان نام فایل راهنمای نصب مورد استفاده قرار بگیرد را وارد نمایید.</value>
  </data>
  <data name="plManifestName.Text" xml:space="preserve">
    <value>نام فایل راهنمای نصب:</value>
  </data>
  <data name="LogTitle.Text" xml:space="preserve">
    <value>گزارش ایجاد پکیج</value>
  </data>
  <data name="plArchiveName.Help" xml:space="preserve">
    <value>لطفا نامی که بایستی به عنوان نام فایل فشرده مورد استفاده قرار بگیرد را وارد نمایید.</value>
  </data>
  <data name="plArchiveName.Text" xml:space="preserve">
    <value>نام فایل فشرده:</value>
  </data>
  <data name="WriterResults.Help" xml:space="preserve">
    <value>نتیجه ایجاد پکیج را در ادامه مشاهده می نمایید.</value>
  </data>
  <data name="WriterResults.Title" xml:space="preserve">
    <value>نتیجه ایجاد پکیج</value>
  </data>
  <data name="CreateManifest.Help" xml:space="preserve">
    <value>بر اساس انتخاب های شما برنامه راهنمای نصب فایل راهنمای نصب مورد نیاز را ایجاد نموده و در فیلد متنی زیر نمایش می دهد. شما می توانید فایل راهنمای نصب راقبل از ایجاد پکیج ویرایش نمایید.</value>
  </data>
  <data name="CreateManifest.Title" xml:space="preserve">
    <value>ایجاد فایل راهنمای نصب</value>
  </data>
  <data name="plManifest.Help" xml:space="preserve">
    <value>برای ایجاد فایل راهنمای نصب، این گزینه را انتخاب نمایید.</value>
  </data>
  <data name="plManifest.Text" xml:space="preserve">
    <value>ایجاد فایل راهنمای نصب:</value>
  </data>
  <data name="plPackage.Help" xml:space="preserve">
    <value>برای ایجاد فایل فشرده مربوط به پکیج، این گزینه را انتخاب نمایید.</value>
  </data>
  <data name="plPackage.Text" xml:space="preserve">
    <value>ایجاد پکیج:</value>
  </data>
  <data name="plReviewManifest.Help" xml:space="preserve">
    <value>برای اینکه بتوانید قبل از ایجاد پکیج جدید، فایل راهنمای نصب را مرور نمایید، بایستی این گزینه را انتخاب نمایید.</value>
  </data>
  <data name="plReviewManifest.Text" xml:space="preserve">
    <value>مرور فایل راهنمای نصب:</value>
  </data>
  <data name="plUseManifest.Help" xml:space="preserve">
    <value>برای استفاده از فایل راهنمای نصب موجود، این گزینه را انتخاب نمایید.</value>
  </data>
  <data name="plUseManifest.Text" xml:space="preserve">
    <value>استفاده از فایل راهنمای نصب موجود:</value>
  </data>
  <data name="plChooseManifest.Help" xml:space="preserve">
    <value>در صورتی که تصمیم گرفته اید از نسخه قبلی فایل راهنمای نصب که ایجاد شده استفاده نمایید، می توانید فایل مربوطه را انتخاب نمایید.</value>
  </data>
  <data name="plChooseManifest.Text" xml:space="preserve">
    <value>انتخاب فایل راهنمای نصب:</value>
  </data>
  <data name="NoFileName.Text" xml:space="preserve">
    <value>شما بایستی نامی برای پکیج وارد نمایید</value>
  </data>
  <data name="ManifestHelp.Text" xml:space="preserve">
    <value>&lt;p&gt;این برنامه راهنمای نصب یک فایل راهنمای نصب برای پلاگین شما ایجاد می کند.&lt;/p&gt;</value>
  </data>
  <data name="InvalidPackageName.Text" xml:space="preserve">
    <value>نام پکیج نامعتبر می باشد. نام پکیج بایستی پسوند ".zip" داشته باشد.</value>
  </data>
  <data name="InvalidManifestExtension.Text" xml:space="preserve">
    <value>نام فایل راهنمای نصب نامعتبر می باشد. نام فایل راهنمای نصب بایستی پسوند ".dnn" داشته باشد.</value>
  </data>
  <data name="Success.Text" xml:space="preserve">
    <value>پکیج مورد نظر ایجاد شده و در پوشه {0} قابل مشاهده می باشد.</value>
  </data>
</root>